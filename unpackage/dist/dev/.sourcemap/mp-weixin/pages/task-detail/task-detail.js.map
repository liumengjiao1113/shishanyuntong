{"version":3,"file":"task-detail.js","sources":["pages/task-detail/task-detail.vue","../../HBuilderX.4.66.2025051912/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwudnVl"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 弹窗 -->\n    <view v-if=\"showPopup\" class=\"popup-overlay\">\n      <view class=\"popup-card\">\n        <view class=\"popup-title\">填写影像信息</view>\n        <view class=\"popup-field\">\n          <text>经度：</text>\n          <input type=\"text\" :value=\"longitude\" disabled />\n        </view>\n        <view class=\"popup-field\">\n          <text>纬度：</text>\n          <input type=\"text\" :value=\"latitude\" disabled />\n        </view>\n        <view class=\"popup-field\">\n          <text>高程：</text>\n          <input type=\"number\" v-model=\"formAltitude\" placeholder=\"请输入高程\" />\n        </view>\n        <view class=\"popup-field\">\n          <text>小区ID：</text>\n          <input type=\"text\" v-model=\"formBlockId\" placeholder=\"请输入小区ID\" />\n        </view>\n        <view class=\"popup-buttons\">\n          <button @click=\"submitPopup\">确认</button>\n          <button @click=\"cancelPopup\">取消</button>\n        </view>\n      </view>\n    </view>\n\n    <!-- 任务状态管理 -->\n    <view class=\"status-bar\">\n      <button :class=\"['status-btn', taskStatus === 'new' ? 'active' : '']\" @click=\"changeTaskStatus('new')\">新建</button>\n      <button :class=\"['status-btn', taskStatus === 'started' ? 'active' : '']\" @click=\"changeTaskStatus('started')\">开始</button>\n      <button :class=\"['status-btn', taskStatus === 'ended' ? 'active' : '']\" @click=\"changeTaskStatus('ended')\">结束</button>\n    </view>\n\n    <!-- 任务基本信息 -->\n    <view class=\"info-card\">\n      <view class=\"info-item\">\n        <text class=\"info-label\">任务名：</text>\n        <text class=\"info-value\">{{ task.taskName }}</text>\n      </view>\n      <view class=\"info-item\">\n        <text class=\"info-label\">任务 ID：</text>\n        <text class=\"info-value\">{{ task.id }}</text>\n      </view>\n      <view class=\"info-item\">\n        <text class=\"info-label\">任务描述：</text>\n        <text class=\"info-value\">{{ task.description }}</text>\n      </view>\n      <view class=\"info-item\">\n        <text class=\"info-label\">小区ID：</text>\n        <text class=\"info-value\">{{ task.position }}</text>\n      </view>\n    </view>\n\n    <!-- 网格布局影像列表 -->\n    <scroll-view class=\"images-scroll\" scroll-y :style=\"{ height: imageAreaHeight + 'px' }\">\n      <view class=\"image-grid\">\n        <view v-for=\"(img, idx) in images\" :key=\"img.id\" class=\"image-item\">\n          <view class=\"image-wrapper\" :class=\"{ selected: img.selected }\" @click=\"toggleSelect(img)\">\n            <image :src=\"img.url\" mode=\"aspectFill\" class=\"thumb-image\" />\n            <progress\n              :percent=\"img.progress\"\n              show-info\n              stroke-width=\"6\"\n              activeColor=\"#00c3ff\"\n              v-if=\"img.showProgress\"\n            />\n          </view>\n          <view class=\"status-text\">{{ uploadStatusText(img.uploadStatus) }}</view>\n          <view class=\"ops-bar\">\n            <button class=\"op-btn\" :disabled=\"img.uploadStatus !== 'settled'\" @click=\"viewResult(img)\">查看</button>\n            <button class=\"op-btn btn-delete\" @click=\"deleteImage(idx)\">删除</button>\n          </view>\n        </view>\n      </view>\n    </scroll-view>\n\n    <view style=\"margin-bottom: 20rpx;\">\n      <button class=\"op-btn\" @click=\"uploadSelectedImages\">上传选中影像</button>\n      <button class=\"op-btn\" @click=\"addImages\">采集图像</button>\n      <button class=\"op-btn\" @click=\"chooseFromAlbum\">从图库上传</button>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { request } from '../../components/request'\nexport default {\n  data() {\n    return {\n      task: { id: '', taskName: '', position: '', description: '' },\n      trid: '',\n      showPopup: false,\n      newImageUrl: '',\n      formAltitude: '',\n      formBlockId: '',\n      longitude: '',\n      latitude: '',\n      taskStatus: 'new',\n      imageAreaHeight: '80vh',\n      taskType: '',\n      images: []\n    };\n  },\n\n  async onLoad(options) {\n    this.task.id = options.id;\n    this.taskStatus = options.status || 'new';\n    const systemInfo = uni.getSystemInfoSync();\n    this.imageAreaHeight = systemInfo.windowHeight - 400;\n    console.log('接收到参数：', options);\n\n    // 初始化任务类型\n    if (options.type === 'phenotype' || options.type === 'roast') {\n      this.taskType = options.type;\n    } else {\n      const typeMap = { '表型采集': 'phenotype', '玉米烤种': 'roast' };\n      this.taskType = typeMap[options.type] || 'phenotype';\n    }\n\n    // 权限申请（App端）\n    if (process.env.UNI_PLATFORM === 'app' && typeof uni.requestPermissions === 'function') {\n      await this.requestAppPermissions();\n    }\n\n    // 获取回执ID逻辑\n    let tridFromServer = null;\n    const token = uni.getStorageSync('token');\n    try {\n      const res = await request({\n        url: `/taskReceipt/get?taskId=${this.task.id}`,\n        method: 'GET',\n        header: { 'Authorization': token }\n      });\n      tridFromServer = res?.data?.trid || null;\n    } catch (err) {\n      console.error('获取回执失败', err);\n    }\n    const storedTridMap = uni.getStorageSync('tridMap') || {};\n    if (tridFromServer) {\n      this.trid = tridFromServer;\n      storedTridMap[this.task.id] = this.trid;\n      uni.setStorageSync('tridMap', storedTridMap);\n    } else if (storedTridMap[this.task.id]) {\n      this.trid = storedTridMap[this.task.id];\n    } else {\n      try {\n        const createRes = await request({\n          url: `/taskReceipt/create?taskId=${this.task.id}`,\n          method: 'POST',\n          header: { 'Authorization': token }\n        });\n        this.trid = createRes.data;\n        storedTridMap[this.task.id] = this.trid;\n        uni.setStorageSync('tridMap', storedTridMap);\n      } catch (err) {\n        console.error('任务回执创建失败', err);\n      }\n    }\n\n    // 获取任务详情\n    if (this.task.id) {\n      try {\n        const res = await request({\n          url: '/task/getTask',\n          method: 'GET',\n          data: { id: this.task.id },\n          header: { 'Authorization': token }\n        });\n        if (res.code === 200 && Array.isArray(res.data) && res.data.length > 0) {\n          const targetTask = res.data.find(task => task.id == this.task.id);\n          if (targetTask) {\n            this.task = {\n              id: targetTask.id,\n              taskName: targetTask.taskName,\n              position: targetTask.create_time,\n              description: targetTask.uploadImage\n            };\n          } else {\n            uni.showToast({ title: '未找到对应ID的任务', icon: 'none' });\n          }\n        } else {\n          uni.showToast({ title: '未查询到任务', icon: 'none' });\n        }\n      } catch (err) {\n        console.error('获取任务详情失败:', err);\n        uni.showToast({ title: '加载任务失败', icon: 'none' });\n      }\n    }\n\n    // 加载本地缓存影像\n    const localImgs = uni.getStorageSync(`localImages_${this.task.id}`);\n    if (localImgs && Array.isArray(localImgs)) {\n      this.images = localImgs;\n    }\n  },\n\n  methods: {\r\n\tasync requestLocationPermission() {\r\n\t  if (process.env.UNI_PLATFORM === 'h5') {\r\n\t    // H5 平台无需申请权限，但浏览器会弹窗\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  // App / 小程序平台\r\n\t  if (typeof uni.getSetting === 'function' && typeof uni.authorize === 'function') {\r\n\t    try {\r\n\t      const res = await uni.getSetting();\r\n\t      if (!res.authSetting['scope.userLocation']) {\r\n\t        await uni.authorize({ scope: 'scope.userLocation' });\r\n\t      }\r\n\t    } catch (err) {\r\n\t      console.error('位置权限授权失败：', err);\r\n\t      uni.showToast({ title: '请手动开启定位权限', icon: 'none' });\r\n\t    }\r\n\t  }\r\n\t},\r\n\n    // App端权限申请（增加API存在检查）\n    async requestAppPermissions() {\n      try {\n        // 申请相册权限\n        if (typeof uni.requestPermissions === 'function') {\n          const albumAuth = await uni.requestPermissions({\n            scope: 'scope.album'\n          });\n          if (albumAuth[0].authResult !== 'granted') {\n            uni.showToast({ title: '请授予相册权限以使用上传功能', icon: 'none' });\n          }\n        }\n\n        // 如果是表型采集，申请位置权限\n        if ( typeof uni.requestPermissions === 'function') {\n          const locationAuth = await uni.requestPermissions({\n            scope: 'scope.userLocation'\n          });\n          if (locationAuth[0].authResult !== 'granted') {\n            uni.showToast({ title: '请授予位置权限以获取定位信息', icon: 'none' });\n          }\n        }\n      } catch (err) {\n        console.error('权限申请失败:', err);\n      }\n    },\n\n    // 状态文本转换\n    statusLabel(status) {\n      const labels = { new: '新建', started: '已开始', ended: '已结束' };\n      return labels[status] || '未知状态';\n    },\n\n    // 切换任务状态\n    changeTaskStatus(newStatus) {\n      if (this.taskStatus !== newStatus) {\n        this.taskStatus = newStatus;\n        uni.showToast({ title: `状态已切换为：${this.statusLabel(newStatus)}`, icon: 'none' });\n      }\n    },\n\n    // 切换影像选中状态\n    toggleSelect(img) {\n      if (img.uploadStatus === 'notUploaded') {\n        img.selected = !img.selected;\n      }\n    },\n\n    // 上传状态文本\n    uploadStatusText(status) {\n      const texts = { notUploaded: '未上传', uploaded: '已上传', settled: '已结算' };\n      return texts[status] || '';\n    },\n\n    // 上传选中影像（统一跨平台逻辑）\n    async uploadSelectedImages() {\n      const selectedImages = this.images.filter(img => img.selected);\n      if (selectedImages.length === 0) {\n        uni.showToast({ title: '请先选中影像', icon: 'none' });\n        return;\n      }\n\n      for (const img of selectedImages) {\n        if (img.uploadStatus !== 'notUploaded') continue;\n\n        uni.showLoading({ title: '上传中...' });\n        img.showProgress = true;\n        img.progress = 0;\n\n        try {\n          // 构造上传参数\n          const formData = {\n            jsonData: JSON.stringify({\n              trId: this.trid,\n              content: {\n                content: img.blockId,\n                otherField: `纬度:${img.latitude || '未知'}, 经度:${img.longitude || '未知'}, 高程:${img.altitude || '未知'}`\n              }\n            })\n          };\n\n          // 使用uni.uploadFile统一处理上传（跨平台支持）\n          await new Promise((resolve, reject) => {\n            uni.uploadFile({\n              url: 'https://leaf.yuntong.work:1314/dataCollection/upload',\n              filePath: img.url,\n              name: 'file',\n              formData,\n              header: {\n                'Authorization': uni.getStorageSync('token') || ''\n              },\n              // 监听上传进度\n              onProgressUpdate: (progress) => {\n                img.progress = progress.progress;\n              },\n              success: (res) => {\n                if (res.statusCode === 200) {\n                  resolve(res);\n                } else {\n                  reject(new Error(`上传失败：${res.statusCode}`));\n                }\n              },\n              fail: (err) => {\n                reject(new Error(`上传失败：${err.errMsg}`));\n              }\n            });\n          });\n\n          // 上传成功后处理\n          img.uploadStatus = 'uploaded';\n          img.selected = false;\n          uni.showToast({ title: '上传成功', icon: 'success' });\n\n          // 模拟结算进度\n          const timer = setInterval(() => {\n            img.progress += 20;\n            if (img.progress >= 100) {\n              clearInterval(timer);\n              img.uploadStatus = 'settled';\n              img.showProgress = false;\n              uni.setStorageSync(`localImages_${this.task.id}`, this.images);\n              uni.showToast({ title: '已结算', icon: 'none' });\n            }\n          }, 1000);\n\n        } catch (err) {\n          console.error('上传失败:', err);\n          uni.showToast({ title: err.message || '上传失败', icon: 'none' });\n          img.showProgress = false;\n        } finally {\n          uni.hideLoading();\n        }\n      }\n    },\n\n    // 查看结果\n    viewResult(img) {\n      if (img.uploadStatus !== 'settled') {\n        uni.showToast({ title: '仅支持查看已结算影像', icon: 'none' });\n        return;\n      }\n      uni.navigateTo({\n        url: `/pages/result/result?id=${this.task.id}&type=${this.taskType}&trid=${this.trid}`\n      });\n    },\n\n    // 从图库选择图片（增加API存在检查）\n    async chooseFromAlbum() {\n      // 检查相册权限（仅App端）\n      if (process.env.UNI_PLATFORM === 'app' && typeof uni.getSetting === 'function') {\n        try {\n          const auth = await uni.getSetting();\n          if (!auth.authSetting['scope.album']) {\n            uni.showToast({ title: '请先授予相册权限', icon: 'none' });\n            return;\n          }\n        } catch (err) {\n          console.error('检查相册权限失败:', err);\n          // 权限检查失败仍尝试打开相册\n        }\n      }\n\n      uni.chooseImage({\n        count: 1,\n        sourceType: ['album'],\n        success: (res) => {\n          this.newImageUrl = res.tempFilePaths[0];\n          this.showPopup = true;\n\n          // 预获取定位（表型采集类型）\n          if (this.taskType === 'phenotype' || this.taskType==='roast') {\n            this.getLocationForImage();\n          }\n        },\n        fail: (err) => {\n          console.error('选择图片失败:', err);\n          uni.showToast({ title: '选择图片失败', icon: 'none' });\n        }\n      });\n    },\n\n async getLocationForImage() {\r\n   try {\r\n     await this.requestLocationPermission();\r\n     const res = await uni.getLocation({ type: 'wgs84' });\r\n \r\n     this.longitude = res.longitude?.toFixed(6) || '';\r\n     this.latitude = res.latitude?.toFixed(6) || '';\r\n     if (!this.formAltitude) {\r\n       this.formAltitude = (res.altitude || 0).toFixed(2);\r\n     }\r\n   } catch (err) {\r\n     console.error('getLocation fail:', err);\r\n     if (err.errMsg?.includes('denied')) {\r\n       uni.showModal({\r\n         title: \"定位权限被拒绝\",\r\n         content: \"请在设置中开启定位权限\",\r\n         showCancel: false\r\n       });\r\n     } else {\r\n       uni.showToast({ title: \"获取定位失败\", icon: \"none\" });\r\n     }\r\n   }\r\n },\r\n\r\n\n\n    // 提交弹窗信息\n    submitPopup() {\n      const newImg = {\n        id: Date.now(),\n        url: this.newImageUrl,\n        uploadStatus: 'notUploaded',\n        selected: false,\n        altitude: this.formAltitude,\n        blockId: this.formBlockId,\n        longitude: this.longitude,\n        latitude: this.latitude,\n        progress: 0,\n        showProgress: false\n      };\n\n      this.images.push(newImg);\n      this.resetPopup();\n      uni.setStorageSync(`localImages_${this.task.id}`, this.images);\n      uni.showToast({ title: '添加成功', icon: 'success' });\n    },\n\n    // 取消弹窗\n    cancelPopup() {\n      this.resetPopup();\n    },\n\n    // 重置弹窗\n    resetPopup() {\n      this.showPopup = false;\n      this.newImageUrl = '';\n      this.formAltitude = '';\n      this.formBlockId = '';\n      this.longitude = '';\n      this.latitude = '';\n    },\n\n    // 删除影像\n    deleteImage(idx) {\n      this.images.splice(idx, 1);\n      uni.setStorageSync(`localImages_${this.task.id}`, this.images);\n    },\n\n    // 采集图像\n    addImages() {\n      uni.navigateTo({\n        url: `/pages/collect/collect?type=${this.taskType}&plotId=${this.task.position}`\n      });\n    },\r\n\tonReady() {\r\n\t  const eventChannel = this.getOpenerEventChannel();\r\n\t  if (eventChannel) {\r\n\t    eventChannel.on('imageAdded', (img) => {\r\n\t      this.images.push(img);\r\n\t      uni.setStorageSync(`localImages_${this.task.id}`, this.images);\r\n\t      uni.showToast({ title: '采集影像添加成功', icon: 'success' });\r\n\t    });\r\n\t  }\r\n\t}\r\n\t\n  }\n};\r\n\n</script>\n\n<style scoped>\n/* 样式保持不变 */\n.container {\n  padding: 20rpx;\n}\n\n.status-bar {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 30rpx;\n}\n.status-btn {\n  flex: 1;\n  margin: 0 10rpx;\n  height: 80rpx;\n  line-height: 80rpx;\n  background-color: #e0e0e0;\n  color: #000000;\n  text-align: center;\n  border-radius: 20rpx;\n  font-size: 28rpx;\n}\n.status-btn.active {\n  background: rgba(148, 166, 66, 1);\n  color: #000000;\n}\n.info-card {\n  background: #fff;\n  border-radius: 16rpx;\n  padding: 30rpx;\n  margin-bottom: 30rpx;\n  box-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.05);\n  color: #000;\n}\n.info-item {\n  display: flex;\n  margin-bottom: 20rpx;\n}\n.info-label {\n  font-size: 28rpx;\n  color: #555;\n  width: 140rpx;\n}\n.info-value {\n  font-size: 28rpx;\n  color: #333;\n}\n.images-scroll {\n  background-color: #f8f8f8;\n  border-radius: 12rpx;\n  padding: 10rpx;\n  box-sizing: border-box;\n}\n\n.image-grid {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-start;\n}\n\n.image-item {\n  width: 200rpx;\n  margin-bottom: 20rpx;\n  margin-left: 20rpx;\n}\n\n.image-wrapper {\n  position: relative;\n  border: 4rpx solid transparent;\n  border-radius: 12rpx;\n  overflow: hidden;\n}\n\n.image-wrapper.selected {\n  border-color: #007AFF;\n}\n\n.thumb-image {\n  width: 100%;\n  height: 200rpx;\n  background-color: #ddd;\n  border-radius: 8rpx;\n}\n\n.status-text {\n  font-size: 24rpx;\n  color: #666;\n  text-align: center;\n  margin-top: 10rpx;\n}\n\n.ops-bar {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10rpx;\n  height: 30px;\n}\n\n.op-btn {\n  font-size: 24rpx;\n  border-radius: 8rpx;\n  color: #000;\n  border: none;\n}\n\n.op-btn:disabled {\n  background-color: #ccc;\n  color: #fff;\n}\n\n.btn-delete {\n  background: rgba(250, 165, 165, 1);\n  color: #333;\n}\n.popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n\n.popup-card {\n  width: 80%;\n  background: #fff;\n  padding: 40rpx;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 10rpx rgba(0,0,0,0.2);\n}\n\n.popup-title {\n  font-size: 32rpx;\n  font-weight: bold;\n  margin-bottom: 30rpx;\n  text-align: center;\n}\n\n.popup-field {\n  margin-bottom: 30rpx;\n  font-size: 28rpx;\n}\n\n.popup-field input {\n  width: 100%;\n  border: 1px solid #ccc;\n  padding: 10rpx;\n  border-radius: 8rpx;\n  font-size: 28rpx;\n}\n\n.popup-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n</style>","import MiniProgramPage from 'D:/狮山云瞳/狮山云瞳/pages/task-detail/task-detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","request"],"mappings":"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"}