{"version":3,"file":"message.js","sources":["pages/message/message.vue","../../HBuilderX.4.66.2025051912/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWVzc2FnZS9tZXNzYWdlLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"card\">\r\n      <text class=\"label\">账号：</text>\r\n      <text class=\"value\">{{ userInfo.username }}</text>\r\n    </view>\r\n\t<view class=\"card\">\n      <text class=\"label\">密码：</text>\n      <text class=\"value\">{{ userInfo.password }}</text>\n    </view>\n\n    <button class=\"btn btn-danger\" @click=\"logout\">退出登录</button>\n    \n  </view>\r\n  <CustomTabBar current=\"message\" />\n</template>\n\n<script>\nimport CustomTabBar from '@/components/tabBar/tabBar.vue'\nimport { request } from '../../components/request.js'\nexport default {\n  components: { CustomTabBar },\n  data() {\n    return {\n      userInfo: {\n        username: '',\n        password: '' // 密码通常不返回明文，这里做默认处理\n      }\n    }\n  },\n  async onLoad() { // 修正生命周期函数名\n    const token = uni.getStorageSync('token');\n    // 判断是否有token，没有则跳转登录\n    if (!token) {\n      uni.reLaunch({ url: '/pages/login/login' })\n      return\n    }\n    try {\n      const res = await request({\n        url: '/user/getUserInfo',\n        method: 'GET',\n        header: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        },\n      })\n      // 注意要使用this访问组件实例属性\n      this.userInfo.username = res.data.username || ''\n      // 密码通常不返回明文，这里仅做展示处理\n      this.userInfo.password = res.data.password ? '******' : ''\n    } catch (error) {\n      console.error('获取信息失败:', error)\n      // 接口报错时清除token并跳转登录\n      uni.clearStorageSync('token')\n      uni.reLaunch({ url: '/pages/login/login' })\n    }\n  },\n  methods: {\n    logout() {\n      uni.showModal({\n        title: '提示',\n        content: '确认退出登录？',\n        success: (res) => {\n          if (res.confirm) {\n            // 清除本地缓存\n           uni.removeStorageSync('token');\r\n             uni.showToast({\r\n               title: '退出登录成功',\r\n               icon:'success'\r\n             });\n            uni.reLaunch({ url: '/pages/login/login' })\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  padding: 40rpx;\n  padding-bottom: 120rpx;\nbackground-color: rgb(239, 242, 235);\n  min-height: 100vh;\n  box-sizing: border-box;\n}\n.card {\n  background: #fff;\n  padding: 30rpx;\n  border-radius: 16rpx;\n  margin-bottom: 40rpx;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.label {\n  font-size: 28rpx;\n  color: #333;\n}\n.value {\n  font-size: 28rpx;\n  color: #666;\n}\n\n.btn-danger {\n background: rgba(148, 166, 66, 0.9);\r\n color: #fff;\n}\n</style>\n","import MiniProgramPage from 'D:/狮山云瞳/狮山云瞳/pages/message/message.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","request"],"mappings":";;;AAkBA,qBAAqB,MAAW;AAEhC,MAAK,YAAU;AAAA,EACb,YAAY,EAAE,aAAc;AAAA,EAC5B,OAAO;AACL,WAAO;AAAA,MACL,UAAU;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA;AAAA,MACZ;AAAA,IACF;AAAA,EACD;AAAA,EACD,MAAM,SAAS;AACb,UAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AAExC,QAAI,CAAC,OAAO;AACVA,oBAAAA,MAAI,SAAS,EAAE,KAAK,sBAAsB;AAC1C;AAAA,IACF;AACA,QAAI;AACF,YAAM,MAAM,MAAMC,2BAAQ;AAAA,QACxB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,QACjB;AAAA,OACF;AAED,WAAK,SAAS,WAAW,IAAI,KAAK,YAAY;AAE9C,WAAK,SAAS,WAAW,IAAI,KAAK,WAAW,WAAW;AAAA,IACxD,SAAO,OAAO;AACdD,oBAAAA,MAAc,MAAA,SAAA,mCAAA,WAAW,KAAK;AAE9BA,oBAAG,MAAC,iBAAiB,OAAO;AAC5BA,oBAAAA,MAAI,SAAS,EAAE,KAAK,sBAAsB;AAAA,IAC5C;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACP,SAAS;AACPA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS,CAAC,QAAQ;AAChB,cAAI,IAAI,SAAS;AAEhBA,gCAAI,kBAAkB,OAAO;AAC3BA,0BAAAA,MAAI,UAAU;AAAA,cACZ,OAAO;AAAA,cACP,MAAK;AAAA,YACP,CAAC;AACFA,0BAAAA,MAAI,SAAS,EAAE,KAAK,sBAAsB;AAAA,UAC5C;AAAA,QACF;AAAA,OACD;AAAA,IACH;AAAA,EACF;AACF;;;;;;;;;;;;;;;;AC3EA,GAAG,WAAW,eAAe;"}